{"version":3,"sources":["components/Filter/Filter.module.css","components/Form/Form.module.css","components/ContactList/ContactList.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onDeleteContact","className","s","list","map","name","number","id","listItem","btn","type","onClick","Form","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","form","this","label","placeholder","pattern","title","required","onChange","input","Component","Filter","App","filter","addContact","find","contact","alert","shortid","generate","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","VisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76e477a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3nA--\",\"input\":\"Filter_input__2g-rV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1PWJs\",\"label\":\"Form_label__1zaGA\",\"btn\":\"Form_btn__-TbGO\",\"input\":\"Form_input__1ONJF\"};","import s from \"./ContactList.module.css\";\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ name, number, id }) => (\n        <li className={s.listItem} key={id}>\n          {`${name}: ${number}`}\n          <button\n            className={s.btn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { Component } from \"react\";\nimport s from \"./Form.module.css\";\n\nexport default class Form extends Component {\n  state = { name: \"\", number: \"\" };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Homer Simpson\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            value={this.state.name}\n            className={s.input}\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"+38(0XX)-XXX-XX-XX\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n            value={this.state.number}\n            className={s.input}\n          />\n        </label>\n        <button className={s.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import s from \"./Filter.module.css\";\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Filter\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter some letters to search\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n}\n","import { Component } from \"react\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport shortid from \"shortid\";\nimport Form from \"./components/Form/Form\";\nimport Filter from \"./components/Filter/Filter\";\nimport s from \"./App.module.css\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (contacts) {\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    let duplicate = this.state.contacts.find(\n      (contact) => contact.name === name\n    );\n\n    if (duplicate) {\n      alert(\"Такой контакт уже существует!\");\n    } else {\n      const contact = {\n        name,\n        number,\n        id: shortid.generate(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [contact, ...prevState.contacts],\n      }));\n    }\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const VisibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <h1 className={s}>Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n        <h2 className={s}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={VisibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__1tfAu\",\"listItem\":\"ContactList_listItem__3aMsl\",\"list\":\"ContactList_list__T1sWL\"};"],"sourceRoot":""}